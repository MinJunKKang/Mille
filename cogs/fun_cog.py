# cogs/fun_cog.py
import random
from pathlib import Path
import discord
from discord.ext import commands
from collections import deque

돌_대답 = [
    "구르는 돌은 방향을 잊어요. 그래서 언덕을 오를 수 없어요.",
    "깊게 가라앉은 돌은, 얕은 물을 싫어했어요.",
    "모든 돌은 언젠가 모래가 되지만, 모래는 돌을 그리워하지 않아요.",
    "크기가 중요한 게 아니에요. 결국 다 눕잖아요.",
    "세상 모든 돌은 둥글어지길 꿈꿨지만, 몇 도가 필요한지는 몰랐어요.",
    "강한 돌도 가끔은 뒤집히고 싶어 해요. 배는 없지만요.",
    "부드러운 돌이 되고 싶으면, 그냥 세게 굴려보세요. 어떻게든 돼요.",
    "가장 무거운 돌도 결국 누워서 지구를 바라봅니다.",
    "깨진 돌은 아파하지 않아요. 대신 더 깨질 준비를 하죠.",
    "바람을 거슬러 서 있는 돌은 없습니다. 그냥 무거운 거예요.",
    "산 꼭대기의 돌도, 사실은 그냥 거기 굴러간 거예요.",
    "작은 돌도 언젠가는 큰 그림자를 가질 수 있어요. 해만 진다면요.",
    "돌은 흘러가는 물을 이해하지 못해요. 그래서 가만히 있어요.",
    "길가에 버려진 돌은 불행하지 않아요. 걍 관심이 없어요.",
    "돌은 왜 사는지 묻지 않아요. 그냥 계속 있어요.",
    "뛰어내리는 돌은 없습니다. 뛰지 못하니까요.",
    "어떤 돌은 바람을 타려고 해요. 실패합니다.",
    "모든 돌은 떨어질 수 있어요. 문제는 높이가 아니라 타이밍이에요.",
    "돌이 생각하는 걸 본 사람은 없어요. 왜냐하면 진짜 생각 안 하거든요.",
    "끊임없이 가만히 있는 것도 일종의 노력입니다. 아님 말고요.",
    "돌이 웃으면 기분 나쁘겠죠? 다행히 웃지 않아요.",
    "비바람을 견디는 돌이 대단해 보이나요? 사실 신경도 안 써요.",
    "정체된 돌도 언젠가는 깨져요. 그러니까 너무 걱정 마요.",
    "인생이 굴러가면 좋은 거예요. 돌처럼 구르면요.",
    "세상에 가장 빠른 돌은 없어요. 돌은 빠를 수가 없어요.",
    "돌끼리 대화하지 않는 이유는, 서로 할 말이 없기 때문이에요.",
    "너무 깊이 생각하지 마세요. 돌도 안 하잖아요.",
    "변하는 돌도 있어요. 그걸 사람들은 자갈이라고 부르죠.",
    "실수한 돌은 없습니다. 애초에 아무것도 안 하니까요.",
    "바람을 두려워하는 돌은 없어요. 느끼지 못하거든요.",
    "구르는 돌은 이끼가 끼지 않지만, 이끼는 신경 안 써요.",
    "깨져본 돌만이 아픔을 모른다는 걸 알아요. 왜냐면 돌이라서요.",
    "돌 위에 핀 꽃은 돌을 고맙게 생각하지 않아요.",
    "가장 오래 살아남은 돌도 사실 아무것도 안 했어요.",
    "물결은 바위에 부딪히고, 바위는 그냥 있습니다.",
    "돌의 목표는 없습니다. 목표가 뭔지도 모릅니다.",
    "힘들면 그냥 누워요. 돌은 항상 누워있어요.",
    "세상 모든 문제는 돌에게 없습니다. 이해를 못 하니까요.",
    "돌은 걷지 않아요. 대신 기다리지도 않아요.",
    "어차피 흘러가는 세상, 돌은 그냥 눕습니다.",
    "무너지지 않는 돌은 없어요. 단지 시간이 걸릴 뿐이에요.",
    "바람에 흔들리는 돌은 없어요. 흔들릴 수가 없거든요.",
    "길모퉁이에 있는 돌은 방향을 고민하지 않아요. 그냥 있습니다.",
    "누가 발로 차도 돌은 화내지 않아요. 대신 굴러갑니다.",
    "산 아래 있는 돌은 꼭대기 돌을 부러워하지 않아요.",
    "젖은 돌도, 마른 돌도 결국 그냥 돌이에요.",
    "모래가 되는 걸 두려워하지 않는 돌이 진짜 돌이에요.",
    "돌은 과거를 잊지 않아요. 애초에 기억하지 않으니까요.",
    "돌은 앞날을 걱정하지 않아요. 그냥 계속 존재해요.",
    "돌은 비교하지 않아요. 크든 작든 그냥 존재할 뿐이에요.",
    "아무것도 바라지 않는 돌이 가장 강합니다.",
    "움직이지 않아도 세상은 돌을 지나쳐요.",
    "어떤 돌은 하늘을 꿈꾸지만, 결국 땅에 눕습니다.",
    "바닥에 붙어 있는 돌이 높은 돌을 부러워할까요? 관심 없습니다.",
    "바다에 빠진 돌은 헤엄치려 하지 않아요.",
    "언젠가 깨어질 것을 알면서도 돌은 그냥 있습니다.",
    "구르는 돌도 언젠가는 멈춰요. 그게 인생이에요.",
    "돌의 침묵은 무거운 게 아니라, 그냥 돌이라서 그런 거예요.",
    "어디에 있든 돌은 돌이에요. 장소는 중요하지 않아요.",
    "돌은 기다리지 않지만, 시간이 돌을 기다립니다.",
    "세상의 모든 돌은 결국 같은 흙으로 돌아갑니다.",
    "깨어진 돌은 슬퍼하지 않아요. 새로운 모습일 뿐이에요.",
    "움직이지 않는 돌도 세상을 바꿀 수 있어요. 사람 발목을 잡아서요.",
    "돌은 빛나지 않아도 존재합니다. 그걸로 충분해요.",
    "하늘을 올려다보는 돌은 없습니다. 고개를 들 수 없으니까요.",
    "바다 속 돌은 별을 본 적 없어요. 근데 별로 궁금하지도 않아요."
]

class FunCog(commands.Cog):
    def __init__(self, bot: commands.Bot):
        self.bot = bot
        self.recent = deque(maxlen=5)
        self.dice_img_dir = (Path(__file__).resolve().parents[1] / "assets").resolve()

    @commands.command(name="고민")
    async def 고민(self, ctx: commands.Context, *, 내용: str):
        후보 = [d for d in 돌_대답 if d not in self.recent] or 돌_대답
        대답 = random.choice(후보)
        self.recent.append(대답)
        await ctx.send(f"🪨 대답하는 돌멩이:\n {대답}")

    @commands.command(name="주사위")
    async def roll_dice(self, ctx: commands.Context):
        outcomes = ["1", "2", "3", "4", "5", "6", "꽝", "999"]
        weights  = [16, 16, 16, 16, 16, 16,   2,   2]
        result = random.choices(outcomes, weights=weights, k=1)[0]

        # 결과별 파일명 매핑
        filename_map = {
            "1": "1.png",
            "2": "2.png",
            "3": "3.png",
            "4": "4.png",
            "5": "5.png",
            "6": "6.png",
            "꽝": "fail.png",
            "999": "999.png",
        }
        fp = self.dice_img_dir / filename_map[result]

        # 결과 메시지/색상
        if result in {"1", "2", "3", "4", "5", "6"}:
            title = f":game_die: 주사위 {result}"
            color = discord.Color.blurple()
        elif result == "꽝":
            title = ":game_die: 꽝~ 모솔 맘사위 당첨!"
            color = discord.Color.red()
        else:  # "999"
            title = ":game_die: 999!! 무적 밀사위 당첨~"
            color = discord.Color.gold()

        embed = discord.Embed(title=title, color=color)

        # 이미지가 있으면 첨부해서 Embed에 표시, 없으면 텍스트만
        if fp.exists():
            file = discord.File(fp, filename=fp.name)
            embed.set_image(url=f"attachment://{fp.name}")
            await ctx.send(embed=embed, file=file)
        else:
            # 이미지 누락 시 안전 폴백
            await ctx.send(embed=embed)
